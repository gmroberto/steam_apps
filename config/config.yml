# ============================================================================
# Steam Games Data Processor - Configuration File
# ============================================================================
# This file contains all configuration parameters with environment variable
# placeholder support for sensitive data.
#
# Placeholder formats:
# - "${ENV_VAR}" - required environment variable
# - "${ENV_VAR:default}" - environment variable with default value
# - "${ENV_VAR:}" - environment variable with empty string default

# ============================================================================
# File Manager Configuration
# ============================================================================
file_manager:
  # JSON file encoding and formatting
  encoding: 'utf-8'
  json_indent: 2
  json_ensure_ascii: false
  
  # Default file names
  files:
    steam_apps_dict: "data/raw/steam_apps_dict.json"
    steam_apps_details: "data/processed/steam_apps_details.json"
    failed_app_ids: "data/processed/failed_app_ids.json"
    non_existent_apps: "data/processed/non_existent_apps.json"

# ============================================================================
# Steam API Client Configuration
# ============================================================================
steam_api_client:
  # API endpoints (can be overridden for proxies or custom endpoints)
  app_list_url: "${STEAM_APP_LIST_URL:https://api.steampowered.com/ISteamApps/GetAppList/v2/}"
  app_details_url: "${STEAM_APP_DETAILS_URL:https://store.steampowered.com/api/appdetails?appids={}}"
  
  # Request timeout (can be overridden by environment variables)
  timeout: "${STEAM_API_TIMEOUT:30}"
  
  # Request delay (can be overridden by environment variables)  
  delay: "${STEAM_API_DELAY:0.5}"
  
  # Retry configuration
  retry:
    attempts: 8
    initial_delay: 1
    backoff_multiplier: 2
    max_delay: 120
  
  # HTTP status codes
  http_status:
    rate_limited: 429

# ============================================================================
# Steam API Processor Configuration
# ============================================================================
steam_api_processor:
  # Processing configuration
  batch_size: 100
  
  # Progress display
  progress_precision: 1  # Decimal places for progress percentage
  
  # File names (can override file_manager defaults)
  files:
    steam_apps_dict: "data/raw/steam_apps_dict.json"
    steam_apps_details: "data/processed/steam_apps_details.json"

# ============================================================================
# Retry Failed Apps Configuration
# ============================================================================
retry_failed_apps:
  # Processing configuration
  delay_between_requests: 0.5  # seconds
  batch_size: 50
  iteration_wait_time: 5  # seconds between retry iterations
  
  # File names
  files:
    output_file: "data/processed/steam_apps_details.json"
    failed_fetch_file: "data/processed/failed_fetch_app_ids.json"
    non_existent_file: "data/processed/non_existent_apps.json"

# ============================================================================
# MongoDB Configuration (with environment variable support)
# ============================================================================
mongodb:
  # Connection settings (sensitive - from environment variables)
  connection_string: "${MONGODB_CONNECTION_STRING:mongodb://localhost:27017/}"
  database_name: "${MONGODB_DATABASE_NAME:steam_games}"
  collection_name: "${MONGODB_COLLECTION_NAME:steam_game_details}"
  
  # Performance settings (can be overridden by environment variables)
  chunk_size: "${MONGODB_CHUNK_SIZE:1000}"
  server_timeout: "${MONGODB_SERVER_TIMEOUT:5000}"  # milliseconds
  
  # Safety settings (can be overridden by environment variables)
  drop_collection: "${MONGODB_DROP_COLLECTION:false}"  # WARNING: true will delete existing data
  
  # File settings (can be overridden by environment variables)
  input_file: "${MONGODB_INPUT_FILE:data/processed/steam_apps_details.json}"
  log_file: "${MONGODB_LOG_FILE:data/logs/mongodb_insert.log}"

# ============================================================================
# Test Configuration (separate from production)
# ============================================================================
test:
  # Test MongoDB settings (separate database and collection)
  mongodb:
    database_name: "${MONGODB_TEST_DATABASE_NAME:steam_games_test}"
    collection_name: "${MONGODB_TEST_COLLECTION_NAME:steam_game_details_test}"
    chunk_size: "${TEST_MONGODB_CHUNK_SIZE:100}"
    
  # Test file settings
  files:
    output_dir: "${TEST_DATA_OUTPUT_DIR:data/test_output}"
    prefix: "${TEST_FILE_PREFIX:test_}"
    
  # Test API settings (faster for testing)
  steam_api:
    delay: "${TEST_STEAM_API_DELAY:0.1}"
    max_apps: 100
    
  # Test processing settings
  processing:
    batch_size: 50
    max_retries: 2

# ============================================================================
# Logging Configuration
# ============================================================================
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(levelname)s - %(message)s"
  
# ============================================================================
# Environment Settings
# ============================================================================
environment:
  debug: false
  environment: "development"  # development, staging, production

# ============================================================================
# Airflow Configuration
# ============================================================================
airflow:
  # Core Airflow settings
  core:
    executor: "${AIRFLOW__CORE__EXECUTOR:LocalExecutor}"
    load_examples: "${AIRFLOW__CORE__LOAD_EXAMPLES:false}"
    debug: "${AIRFLOW__CORE__DEBUG:false}"
    dags_are_paused_at_creation: true
    
  # Webserver settings
  webserver:
    port: "${AIRFLOW__WEBSERVER__WEB_SERVER_PORT:8080}"
    secret_key: "${AIRFLOW__WEBSERVER__SECRET_KEY:your-secret-key-here}"
    authenticate: true
    auth_backend: "airflow.auth.backend.basic_auth"
    rbac: true
    wtf_csrf_enabled: true
    permanent_session_lifetime: 43200
    
  # Scheduler settings
  scheduler:
    heartbeat_sec: 5
    max_threads: 2
    parsing_processes: 1
    dag_file_processor_timeout: 50
    dag_dir_list_interval: 300
    
  # Logging settings
  logging:
    level: "${AIRFLOW__LOGGING__LOGGING_LEVEL:INFO}"
    base_log_folder: "${AIRFLOW__LOGGING__BASE_LOG_FOLDER:./airflow/logs}"
    dag_processor_manager_log_location: "./airflow/logs/dag_processor_manager/dag_processor_manager.log"
    
  # Database settings
  database:
    sql_alchemy_conn: "${AIRFLOW__CORE__SQL_ALCHEMY_CONN:postgresql+psycopg2://airflow:airflow@postgres:5432/airflow}"
    postgres:
      user: "${POSTGRES_USER:airflow}"
      password: "${POSTGRES_PASSWORD:airflow}"
      database: "${POSTGRES_DB:airflow}"
      host: "${POSTGRES_HOST:postgres}"
      port: "${POSTGRES_PORT:5432}"
      
  # Celery settings (for distributed processing)
  celery:
    broker_url: "${AIRFLOW__CELERY__BROKER_URL:redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0}"
    result_backend: "${AIRFLOW__CELERY__RESULT_BACKEND:db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}}"
    worker_concurrency: "${AIRFLOW__CELERY__WORKER_CONCURRENCY:16}"
    worker_prefetch_multiplier: "${AIRFLOW__CELERY__WORKER_PREFETCH_MULTIPLIER:1}"
    redis:
      host: "${REDIS_HOST:redis}"
      port: "${REDIS_PORT:6379}"
      password: "${REDIS_PASSWORD:}"
      
  # Email settings (for notifications)
  smtp:
    host: "${AIRFLOW__SMTP__SMTP_HOST:localhost}"
    starttls: "${AIRFLOW__SMTP__SMTP_STARTTLS:false}"
    ssl: "${AIRFLOW__SMTP__SMTP_SSL:false}"
    user: "${AIRFLOW__SMTP__SMTP_USER:}"
    password: "${AIRFLOW__SMTP__SMTP_PASSWORD:}"
    port: "${AIRFLOW__SMTP__SMTP_PORT:25}"
    mail_from: "${AIRFLOW__SMTP__SMTP_MAIL_FROM:airflow@example.com}"
    
  # Monitoring settings
  metrics:
    statsd_on: "${AIRFLOW__METRICS__STATSD_ON:true}"
    statsd_host: "${AIRFLOW__METRICS__STATSD_HOST:localhost}"
    statsd_port: "${AIRFLOW__METRICS__STATSD_PORT:8125}"
    statsd_prefix: "${AIRFLOW__METRICS__STATSD_PREFIX:airflow}"
    
  # DAG-specific settings
  dags:
    steam_games_etl:
      schedule_interval: "0 2 * * *"  # Daily at 2 AM
      max_active_runs: 1
      concurrency: 1
      retries: 3
      retry_delay_minutes: 5
      catchup: false
      
    test_steam_games_etl:
      schedule_interval: null  # Manual trigger only
      max_active_runs: 1
      concurrency: 1
      retries: 2
      retry_delay_minutes: 3
      catchup: false
      
  # Connections (for Airflow UI)
  connections:
    mongodb_steam: "${AIRFLOW_CONN_MONGODB_STEAM:mongodb://localhost:27017/steam_games}"
    steam_api: "${AIRFLOW_CONN_STEAM_API:http://api.steampowered.com}"
    
  # Variables (for Airflow UI)
  variables:
    config_file_path: "${AIRFLOW_VAR_CONFIG_FILE_PATH:config/config.yml}"
    environment: "${AIRFLOW_VAR_ENVIRONMENT:development}"
    steam_api_timeout: "${AIRFLOW_VAR_STEAM_API_TIMEOUT:30}"
    steam_api_delay: "${AIRFLOW_VAR_STEAM_API_DELAY:0.5}"
    steam_batch_size: "${AIRFLOW_VAR_STEAM_BATCH_SIZE:100}"
    mongodb_chunk_size: "${AIRFLOW_VAR_MONGODB_CHUNK_SIZE:1000}"
    mongodb_drop_collection: "${AIRFLOW_VAR_MONGODB_DROP_COLLECTION:false}"
    data_raw_dir: "${AIRFLOW_VAR_DATA_RAW_DIR:data/raw}"
    data_processed_dir: "${AIRFLOW_VAR_DATA_PROCESSED_DIR:data/processed}"
    data_logs_dir: "${AIRFLOW_VAR_DATA_LOGS_DIR:data/logs}"
    data_test_output_dir: "${AIRFLOW_VAR_DATA_TEST_OUTPUT_DIR:data/test_output}"
